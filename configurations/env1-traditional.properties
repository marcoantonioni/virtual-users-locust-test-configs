#------------------------------
# Environment
#------------------------------

#------------------------------
BAW_IAM_HOST=https://baw.standalone.net:9443
BAW_BASE_HOST=https://baw.standalone.net:9443

#------------------------------
# Used only if BAW_TASK_LIST_STRATEGY=STANDALONE 
# empty if 'Traditional', for CP4BA BAStudio authoring is /bas
# if set must have a starting slash '/'
BAW_BASE_URI_SERVER=

#------------------------------
# STANDALONE | FEDERATEDPORTAL
BAW_TASK_LIST_STRATEGY=STANDALONE

#===============================================
# ADMIN & POWER USER
#===============================================
# Add power user to group tw_admins

#------------------------------
BAW_POWER_USER_NAME=dadmin
BAW_POWER_USER_PASSWORD=dadmin

BAW_IAM_USER_NAME=
BAW_IAM_USER_PASSWORD=

#===============================================
# BAW_USERS
#===============================================

#------------------------------
# UNIQUE | TWINS
BAW_USERS_STRATEGY=UNIQUE

#------------------------------
# REAL | VUX_NUMBERED
BAW_USERS_TYPE=VUX_NUMBERED

#------------------------------
# SORTED_FIFO | SORTED_LIFO | SORTED_RANDOM
BAW_USER_ORDER_MODE=SORTED_RANDOM

#------------------------------
# Virtual User think time for task complete, update
BAW_VU_THINK_TIME_MIN=0
BAW_VU_THINK_TIME_MAX=1

#------------------------------
BAW_VU_VERBOSE=false
BAW_VU_IDLE_NOTIFY=true
BAW_VU_IDLE_NOTIFY_AFTER_NUM_INTERACTIONS=100

#===============================================
# APPLICATION
#===============================================
BAW_PROCESS_APPLICATION_NAME=VirtualUsersSandboxTraditional
BAW_PROCESS_APPLICATION_ACRONYM=VUST
BAW_PROCESS_APPLICATION_SNAPSHOT_NAME=
# true | false
BAW_PROCESS_APPLICATION_SNAPSHOT_USE_TIP=true


#===============================================
# PROCESSES & ACTIONS
#===============================================

BAW_PROCESS_NAMES=VUSClaimCompleteTwoRoles
# ClaimCompileAndValidate,SimpleClaimComplete
#,ClaimCompleteTwoRoles

#------------------------------
# BAW_VU_ACTIONS is a comma separated list of options (Login is always enabled): 
# CLAIM a unassign task
# COMPLETE complete aclaimed task
# GETDATA get data values from claimd task
# SETDATA set data values to claimd task
# RELEASE release a claimed task to group
# CREATEPROCESS create a new process instance

BAW_VU_ACTIONS=CREATEPROCESS,TASK_LIST,CLAIM,GETDATA,SETDATA,COMPLETE,RELEASE
#BAW_VU_ACTIONS=TASK_LIST,CLAIM,GETDATA,SETDATA,RELEASE
#BAW_VU_ACTIONS=CLAIM,COMPLETE
#BAW_VU_ACTIONS=CREATEPROCESS

#===============================================
# RUN CONFIGURATION
#===============================================

#------------------------------

# LOAD_TEST | UNIT_TEST
BAW_RUN_MODE=LOAD_TEST

#------------------------------
# Payload Manager

#------------------------------
BAW_PAYLOAD_MANAGER=./configurations/payloadManager-type1-0-3-2.py
#BAW_PAYLOAD_MANAGER=./configurations/payloadManager-type2.py

#------------------------------
# max number of process instance created during the run, used by both run modes
BAW_PROCESS_INSTANCES_MAX=10


#------------------------------
# Unit Test Scenario

# in minutes
BAW_UNIT_TEST_MAX_DURATION=3
# output instances to file
BAW_UNIT_TEST_OUT_FILE_NAME=./outputdata/unittest-scenario2-traditional.json
# output instances to SQLite db
BAW_UNIT_TEST_OUT_USE_DB=true
BAW_UNIT_TEST_OUT_SQLITEDB_NAME=./outputdata/unittest-scenario2-traditional-sqlite.db

# run assert manager at the end of unit test (must use SQLlite db)
BAW_UNIT_TEST_RUN_ASSERTS_MANAGER=true
# assert manager logic
BAW_UNIT_TEST_ASSERTS_MANAGER=./configurations/assertsManager-type1.py
